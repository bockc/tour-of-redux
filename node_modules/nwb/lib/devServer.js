'use strict';

exports.__esModule = true;
exports.default = server;

var _connectHistoryApiFallback = require('connect-history-api-fallback');

var _connectHistoryApiFallback2 = _interopRequireDefault(_connectHistoryApiFallback);

var _express = require('express');

var _express2 = _interopRequireDefault(_express);

var _webpack = require('webpack');

var _webpack2 = _interopRequireDefault(_webpack);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Start an Express server which uses webpack-dev-middleware to build and serve
 * assets using Webpack's watch mode, and webpack-hot-middleware to hot reload
 * changes in the browser and display compile error overlays.
 *
 * Static content is handled by CopyPlugin.
 */
function server(webpackConfig, _ref, cb) {
  var fallback = _ref.fallback,
      host = _ref.host,
      port = _ref.port,
      staticPath = _ref.staticPath;

  var app = (0, _express2.default)();
  var compiler = (0, _webpack2.default)(webpackConfig);

  if (fallback !== false) {
    app.use((0, _connectHistoryApiFallback2.default)());
  }

  app.use(require('webpack-dev-middleware')(compiler, {
    noInfo: true,
    publicPath: webpackConfig.output.publicPath,
    quiet: true,
    watchOptions: {
      ignored: /node_modules/
    }
  }));

  app.use(require('webpack-hot-middleware')(compiler, {
    log: false
  }));

  function onServerStart(err) {
    if (err) return cb(err);
  }

  // Only provide host config if it was explicitly specified by the user
  if (host) {
    app.listen(port, host, onServerStart);
  } else {
    app.listen(port, onServerStart);
  }
}
module.exports = exports['default'];